// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/Todo.proto

package Todo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Todo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_482ca68906d6e9d8, []int{0}
}

func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Todo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Todo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

//message Request {
//    string id = 1;
//}
type GetTodoResponse struct {
	Todo                 []*Todo  `protobuf:"bytes,1,rep,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodoResponse) Reset()         { *m = GetTodoResponse{} }
func (m *GetTodoResponse) String() string { return proto.CompactTextString(m) }
func (*GetTodoResponse) ProtoMessage()    {}
func (*GetTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_482ca68906d6e9d8, []int{1}
}

func (m *GetTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodoResponse.Unmarshal(m, b)
}
func (m *GetTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodoResponse.Marshal(b, m, deterministic)
}
func (m *GetTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodoResponse.Merge(m, src)
}
func (m *GetTodoResponse) XXX_Size() int {
	return xxx_messageInfo_GetTodoResponse.Size(m)
}
func (m *GetTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodoResponse proto.InternalMessageInfo

func (m *GetTodoResponse) GetTodo() []*Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

func init() {
	proto.RegisterType((*Todo)(nil), "Todo")
	proto.RegisterType((*GetTodoResponse)(nil), "GetTodoResponse")
}

func init() { proto.RegisterFile("proto/Todo.proto", fileDescriptor_482ca68906d6e9d8) }

var fileDescriptor_482ca68906d6e9d8 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0x4d, 0x0b, 0x82, 0x40,
	0x10, 0x86, 0xf1, 0x2b, 0x69, 0x84, 0x92, 0x25, 0x62, 0xb3, 0x8b, 0x78, 0xf2, 0x10, 0x2b, 0xe8,
	0xbd, 0x5b, 0x74, 0xeb, 0x60, 0xfd, 0x02, 0xdb, 0x4d, 0x16, 0xcc, 0x59, 0x74, 0x0b, 0xfa, 0xf7,
	0xb1, 0x6b, 0x41, 0x74, 0x9b, 0xf7, 0x63, 0x5e, 0x1e, 0x88, 0xd5, 0x80, 0x1a, 0x8b, 0x0b, 0x72,
	0x64, 0xf6, 0x4c, 0xb6, 0x2d, 0x62, 0xdb, 0x89, 0xc2, 0xaa, 0xe6, 0x71, 0x2b, 0xc4, 0x5d, 0xe9,
	0xd7, 0x14, 0x66, 0x27, 0xf0, 0x4d, 0x95, 0x2c, 0xc0, 0x95, 0x9c, 0x3a, 0xa9, 0x93, 0xcf, 0x6b,
	0x57, 0x72, 0xb2, 0x82, 0x40, 0x4b, 0xdd, 0x09, 0xea, 0x5a, 0x6b, 0x12, 0x24, 0x85, 0x88, 0x8b,
	0xf1, 0x3a, 0x48, 0xa5, 0x25, 0xf6, 0xd4, 0xb3, 0xd9, 0xaf, 0x95, 0xed, 0x60, 0x79, 0x14, 0xda,
	0x4c, 0xd6, 0x62, 0x54, 0xd8, 0x8f, 0x82, 0x6c, 0xc0, 0xd7, 0xc8, 0x91, 0x3a, 0xa9, 0x97, 0x47,
	0x65, 0xc0, 0x6c, 0x68, 0xad, 0x72, 0x0f, 0xa1, 0x51, 0xe7, 0xe1, 0x49, 0x2a, 0x08, 0x3f, 0x8f,
	0x64, 0xcd, 0x26, 0x62, 0xf6, 0x25, 0x66, 0x07, 0x43, 0x9c, 0xc4, 0xec, 0x6f, 0xba, 0x99, 0xd9,
	0x46, 0xf5, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x94, 0xd2, 0x92, 0x55, 0xf5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoSrvClient is the client API for TodoSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoSrvClient interface {
	GetTodo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetTodoResponse, error)
}

type todoSrvClient struct {
	cc *grpc.ClientConn
}

func NewTodoSrvClient(cc *grpc.ClientConn) TodoSrvClient {
	return &todoSrvClient{cc}
}

func (c *todoSrvClient) GetTodo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetTodoResponse, error) {
	out := new(GetTodoResponse)
	err := c.cc.Invoke(ctx, "/TodoSrv/GetTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoSrvServer is the server API for TodoSrv service.
type TodoSrvServer interface {
	GetTodo(context.Context, *empty.Empty) (*GetTodoResponse, error)
}

func RegisterTodoSrvServer(s *grpc.Server, srv TodoSrvServer) {
	s.RegisterService(&_TodoSrv_serviceDesc, srv)
}

func _TodoSrv_GetTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoSrvServer).GetTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TodoSrv/GetTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoSrvServer).GetTodo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TodoSrv",
	HandlerType: (*TodoSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTodo",
			Handler:    _TodoSrv_GetTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/Todo.proto",
}
